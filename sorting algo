
def buublesort(nums):
   def bubblesort(nums):
    n = len(nums)
    for i in range(n-1):
        flag = False
        for j in range(n-i-1):
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
                flag = True
        if flag == False:
            break
                
    print(nums)
    
===============================
def insertionsort(nums):
    for i in range(1, len(nums)):
        key = nums[i]
        
        j = i -1
        
        while j>=0  and key < nums[j]:
            nums[j+1] = nums[j]
            j -= 1
        
        nums[j+1] = key
    
    return nums
===========================

def quicksort(nums):
    if len(nums) < 2:
        return nums
    
    pivot_pos = 0
    curr_pos = 0
    
    for i in range(1, len(nums)):
        if nums[i] <= nums[pivot_pos]:
            curr_pos += 1
            nums[i], nums[curr_pos] = nums[curr_pos], nums[i]
    
    nums[pivot_pos], nums[curr_pos] = nums[curr_pos], nums[pivot_pos]
    
    return quicksort(nums[:curr_pos]) + [nums[curr_pos]] + quicksort(nums[curr_pos+1:])


nums = [6, 5, 1, 4, 2, 5,8, 3, 7, 9, 2]
print(quicksort(nums))

=========================================
